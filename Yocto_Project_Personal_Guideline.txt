I. Yocto Project Note

	- Fully supports a wide range of hardware and device emulation through the QEMU Emulator
Image được tạo ra từ Yocto Project có thể boot lên QEMU Emulator và sau đó có thể thực hiện development trên đó.

	- Những thành phần cần có khi làm việc với Yocto Project:
		+) Host machine sử dụng Linux distribution như là Ubuntu, Fedora, openSUSE, CentOS
		+) Các packages cần thiết (tuỳ theo từng Linux Distribution của Host machine mà các packages khác nhau)

		Ubuntu : $ sudo apt-get install sed wget cvs subversion git-core coreutils \
				     unzip texi2html texinfo libsdl1.2-dev docbook-utils fop gawk \
				     python-pysqlite2 diffstat help2man make gcc build-essential xsltproc \
				     g++ desktop-file-utils chrpath libgl1-mesa-dev libglu1-mesa-dev \
				     mercurial autoconf automake groff libtool xterm libxml-parser-perl

		Fedora : $ sudo yum groupinstall "development tools"
			     $ sudo yum install python m4 make wget curl ftp hg tar bzip2 gzip \
				     unzip python-psyco perl texinfo texi2html diffstat openjade \
				     docbook-style-dsssl sed docbook-style-xsl docbook-dtds fop xsltproc \
				     docbook-utils sed bc eglibc-devel ccache pcre pcre-devel quilt \
				     groff linuxdoc-tools patch linuxdoc-tools cmake help2man \
				     perl-ExtUtils-MakeMaker tcl-devel gettext chrpath ncurses apr \
				     SDL-devel mesa-libGL-devel mesa-libGLU-devel gnome-doc-utils \
				     autoconf automake libtool xterm

		openSUSE : $ sudo zypper install python gcc gcc-c++ libtool fop \
				     subversion git chrpath automake make wget help2man xsltproc \
				     diffstat texinfo mercurial freeglut-devel libSDL-devel

		CentOS : $ sudo yum -y groupinstall "development tools"
			     $ sudo yum -y install tetex gawk sqlite-devel vim-common redhat-lsb xz \
			         m4 make wget curl ftp tar bzip2 gzip python-devel \
			         unzip perl texinfo texi2html diffstat openjade zlib-devel \
			         docbook-style-dsssl sed docbook-style-xsl docbook-dtds \
			         docbook-utils bc glibc-devel pcre pcre-devel \
			         groff linuxdoc-tools patch linuxdoc-tools cmake \
			         tcl-devel gettext ncurses apr \
			         SDL-devel mesa-libGL-devel mesa-libGLU-devel gnome-doc-utils \
			         autoconf automake libtool xterm

		+) Yocto Project Release: download từ trang chủ. Các tài liệu liên quan đến bản release sẽ có tại https://www.yoctoproject.org/docs/?section=developer-manuals

	- Build Image Process:
		 $ wget http://downloads.yoctoproject.org/releases/yocto/yocto-1.2/poky-denzil-7.0.tar.bz2
	     $ tar xjf poky-denzil-7.0.tar.bz2

	     hoặc dùng git repositories:
	     $ git clone git://git.yoctoproject.org/poky
	     
	     $ source poky-denzil-7.0/oe-init-build-env poky-denzil-7.0-build  (runs the Yocto Project environment setup script, )

	    +) Để tiết kiệm bộ nhớ (disk space) thêm dòng lệnh sau vào file configuration (poky-denzil-7.0-build/conf/local.conf) để xoá thư mực build sau khi một packages được build xong
	    	INHERIT += rm_work

	    +) Các variables cần chú trong file local.conf:
	    	- MACHINE : target architecture (qemux86, ...)
	    	- BB_NUMBER_THREADS and PARALLEL_MAKE : dùng để tăng tốc độ build nếu host machine là multi core processor (gán bằng 2 * number of processor core)
	    	- PACKAGE_CLASSES: config loại packages manager (deb, ipk, rpm)

	     $ bitbake -k core-image-sato (command này dùng để build ra OS image cho target. Note: BitBake requires Python 2.6 or 2.7)
	     $ runqemu qemux86 (command này dùng để run OS image)

	- Nếu hardware support, filesystem hoặc các services thay đổi thì phải build image. Ngược lại nếu các thành phần trên ổn định rồi thì nên dùng các image đã được build sẵn (pre-built image) theo các bước sau:
		+) Install toolchain:
			pre-built toolchain download từ http://downloads.yoctoproject.org/releases/yocto/yocto-1.2/toolchain/ và lưu trữ trong folder /opt/poky/toolchain/ với tên
			poky-eglibc-<host_system>-<arch>-toolchain-gmae-<release>.tar.bz2

		    Trong đó :
		         <host_system> là development host machine system: 
		                i686 or x86_64.
		       
		         <arch> là target architecture: 
		                i586, x86_64, powerpc, mips, or arm.
		       
		         <release> là version của Yocto Project.

		    Toolchain bắt buộc phải được cài đặt vào folder /opt/poky:
		    $ cd /
     		$ sudo tar -xvjf ~/toolchains/poky-eglibc-x86_64-i586-toolchain-gmae-1.2.tar.bz2

     	+) Download pre-built image:
     		download từ http://downloads.yoctoproject.org/releases/yocto/yocto-1.2/machines/qemu với tên là 1 trong 2 dạng sau: zImage-qemu<arch>.bin or vmlinux-qemu<arch>.bin

     	+) Download filesystem 
     		filesystem có 2 định dạng là ext3 và tar. Nếu dùng QEMU evaluator thì bắt buộc phải dùng ext3. 

     		core-image-<profile>-qemu<arch>.ext3
     		core-image-<profile>-qemu<arch>.tar.bz2

     		Trong đó:
     			<profile> là profile của filesystem image:
     					lsb, lsb-dev, lsb-sdk, lsb-qt3, minimal, minimal-dev, sato, sato-dev, or sato-sdk (https://www.yoctoproject.org/docs/1.2/poky-ref-manual/poky-ref-manual.html#ref-images)

     			<arch> là target architecture:
     					i586, x86_64, powerpc, mips, or arm

     	+) Setup environment:
     		$ source /opt/poky/1.2/environment-setup-<arch>-poky-linux-<if> 

     	+) Run QEMU:
     		$ runqemu <qemuarch> <kernel-image> <filesystem-image>

     		Trong đó:
		         <qemuarch> là qemu target architecture: 
		         		qemux86, qemux86-64, qemuppc, qemumips, qemuarm.

		         <kernel-image> là architecture-specific kernel image.

		         <filesystem-image> là .ext3 filesystem image.













































