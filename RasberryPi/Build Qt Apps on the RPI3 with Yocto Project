Build Qt Apps on the RPI3 with Yocto Project

You can create a Qt Apps project from host machine and commit to git or clone a available project from git


1. Use cross-compile method
Here I demo a test project, that is cloned from git

	$ git clone https://github.com/scottellis/qqtest
	$ cd qqtest

Enable Qt cross-build environment:
	$ source /opt/poky/rpi-meta-qt5-2.1.1/environment-setup-cortexa7hf-neon-vfpv4-poky-linux-gnueabi
	$ qmake && make -j4

Verify the executable file
	$ file qqtest
(results will show it is a ARM executable file)

Copy it to RPI3:
	$ scp qqtest root@IP:/home/root


2. Create bitbake recipes for Qt Apps
Example: create file meta-rpi/recipes-qt/qqtest/qqtest_git.bb with the following content:

SUMMARY = "Qt5 Test App"
HOMEPAGE = ""
LICENSE = "MIT"
LIC_FILES_CHKSUM = "file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302"

DEPENDS += "qtdeclarative"

PR = "r0"

SRCREV = "${AUTOREV}"
SRC_URI = "git://github.com/scottellis/qqtest.git"

S = "${WORKDIR}/git"

require recipes-qt/qt5/qt5.inc

do_install() {
    install -d ${D}${bindir}
    install -m 0755 ${B}/${PN} ${D}${bindir}
}

FILES_${PN} = "${bindir}"

RDEPENDS_${PN} = "qtdeclarative-qmlplugins"



Add qqtest package to rootfs by add the following config to qt5_image.bb file:

QML_APPS = " \
    qqtest \
"

IMAGE_INSTALL += " \
    ${QML_APPS} \
"